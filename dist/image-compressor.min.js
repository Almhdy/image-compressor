/*!
 * Image Compressor v0.2.0
 * https://github.com/xkeshi/image-compressor
 *
 * Copyright (c) 2017 Xkeshi
 * Released under the MIT license
 *
 * Date: 2017-07-26T03:07:52.034Z
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.ImageCompressor=t()}(this,function(){"use strict";function e(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var t=function(e,t){return t={exports:{}},e(t,t.exports),t.exports}(function(e){!function(t){var n=t.HTMLCanvasElement&&t.HTMLCanvasElement.prototype,r=t.Blob&&function(){try{return Boolean(new Blob)}catch(e){return!1}}(),o=r&&t.Uint8Array&&function(){try{return 100===new Blob([new Uint8Array(100)]).size}catch(e){return!1}}(),i=t.BlobBuilder||t.WebKitBlobBuilder||t.MozBlobBuilder||t.MSBlobBuilder,a=/^data:((.*?)(;charset=.*?)?)(;base64)?,/,u=(r||i)&&t.atob&&t.ArrayBuffer&&t.Uint8Array&&function(e){var t,n,u,l,s,c,f,h,b;if(!(t=e.match(a)))throw new Error("invalid data URI");for(n=t[2]?t[1]:"text/plain"+(t[3]||";charset=US-ASCII"),u=!!t[4],l=e.slice(t[0].length),s=u?atob(l):decodeURIComponent(l),c=new ArrayBuffer(s.length),f=new Uint8Array(c),h=0;h<s.length;h+=1)f[h]=s.charCodeAt(h);return r?new Blob([o?f:c],{type:n}):((b=new i).append(c),b.getBlob(n))};t.HTMLCanvasElement&&!n.toBlob&&(n.mozGetAsFile?n.toBlob=function(e,t,r){e(r&&n.toDataURL&&u?u(this.toDataURL(t,r)):this.mozGetAsFile("blob",t))}:n.toDataURL&&u&&(n.toBlob=function(e,t,n){e(u(this.toDataURL(t,n)))})),e.exports?e.exports=u:t.dataURLtoBlob=u}(window)}),n=Object.prototype.toString,r=function(e){return e instanceof Blob||"[object Blob]"===n.call(e)},o={width:void 0,height:void 0,quality:.8,success:null,error:null},i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=window.URL||window.webkitURL,l=window.FileReader,s=/^image\/.+$/;return function(){function n(t,r){e(this,n),this.result=null,t&&this.compress(t,r)}return a(n,[{key:"compress",value:function(e,n){var a=this,c=new Image;return n=i({},o,n),new Promise(function(t,n){if(r(e))if(s.test(e.type))if(u)t(u.createObjectURL(e));else if(l){var o=new l;o.onload=function(e){return t(e.file.result)},o.onabort=n,o.onerror=n,o.readAsDataURL(e)}else n("The current browser does not support image compression.");else n("The first argument must be an image File or Blob object.");else n("The first argument must be a File or Blob object.")}).then(function(t){return new Promise(function(n,r){c.onload=function(){n({width:c.naturalWidth,height:c.naturalHeight})},c.onabort=r,c.onerror=r,c.alt=e.name,c.src=t})}).then(function(r){var o=r.width,i=r.height;return new Promise(function(r){var a=document.createElement("canvas"),u=a.getContext("2d"),l=o/i,s=o,f=i;n.width>0?f=(s=n.width)/l:n.height>0&&(s=(f=n.height)*l),a.width=s,a.height=f,u.drawImage(c,0,0,s,f),a.toBlob?a.toBlob(r,e.type,n.quality):r(t(a.toDataURL(e.type,n.quality)))})}).then(function(t){return u&&u.revokeObjectURL(c.src),t.name=e.name,t.size>e.size&&(t=e),a.result=t,n.success&&n.success(t),Promise.resolve(t)}).catch(function(e){if(!n.error)throw e;n.error(new Error(e))})}}]),n}()});