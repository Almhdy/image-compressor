/*!
 * image-compressor v0.1.0
 * https://github.com/xkeshi/image-compressor
 *
 * Copyright (c) 2017 Xkeshi
 * Released under the MIT license
 *
 * Date: 2017-07-25T03:10:07.935Z
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.ImageCompressor=t()}(this,function(){"use strict";var e=function(e,t){return t={exports:{}},e(t,t.exports),t.exports}(function(e){!function(t){var n=t.HTMLCanvasElement&&t.HTMLCanvasElement.prototype,r=t.Blob&&function(){try{return Boolean(new Blob)}catch(e){return!1}}(),o=r&&t.Uint8Array&&function(){try{return 100===new Blob([new Uint8Array(100)]).size}catch(e){return!1}}(),i=t.BlobBuilder||t.WebKitBlobBuilder||t.MozBlobBuilder||t.MSBlobBuilder,a=/^data:((.*?)(;charset=.*?)?)(;base64)?,/,u=(r||i)&&t.atob&&t.ArrayBuffer&&t.Uint8Array&&function(e){var t,n,u,l,c,s,f,h,b;if(!(t=e.match(a)))throw new Error("invalid data URI");for(n=t[2]?t[1]:"text/plain"+(t[3]||";charset=US-ASCII"),u=!!t[4],l=e.slice(t[0].length),c=u?atob(l):decodeURIComponent(l),s=new ArrayBuffer(c.length),f=new Uint8Array(s),h=0;h<c.length;h+=1)f[h]=c.charCodeAt(h);return r?new Blob([o?f:s],{type:n}):((b=new i).append(s),b.getBlob(n))};t.HTMLCanvasElement&&!n.toBlob&&(n.mozGetAsFile?n.toBlob=function(e,t,r){e(r&&n.toDataURL&&u?u(this.toDataURL(t,r)):this.mozGetAsFile("blob",t))}:n.toDataURL&&u&&(n.toBlob=function(e,t,n){e(u(this.toDataURL(t,n)))})),e.exports?e.exports=u:t.dataURLtoBlob=u}(window)}),t=Object.prototype.toString,n=function(e){return e instanceof Blob||"[object Blob]"===t.call(e)},r={width:void 0,height:void 0,quality:.8,success:null,error:null},o=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},u=window.URL||window.webkitURL,l=window.FileReader,c=/^image\/.+$/;return function(){function t(e,n){o(this,t),this.result=null,e&&this.compress(e,n)}return i(t,[{key:"compress",value:function(t,o){var i=this,s=new Image;return o=a({},r,o),new Promise(function(e,r){if(n(t))if(c.test(t.type))if(u)e(u.createObjectURL(t));else if(l){var o=new l;o.onload=function(t){return e(t.file.result)},o.onabort=r,o.onerror=r,o.readAsDataURL(t)}else r("The current browser does not support image compression.");else r("The first argument must be an image File or Blob object.");else r("The first argument must be a File or Blob object.")}).then(function(e){return new Promise(function(n,r){s.onload=function(){n({width:s.naturalWidth,height:s.naturalHeight})},s.onabort=r,s.onerror=r,s.alt=t.name,s.src=e})}).then(function(n){var r=n.width,i=n.height;return new Promise(function(n){var a=document.createElement("canvas"),u=a.getContext("2d"),l=r/i,c=r,f=i;o.width>0?f=(c=o.width)/l:o.height>0&&(c=(f=o.height)*l),a.width=c,a.height=f,u.drawImage(s,0,0,c,f),a.toBlob?a.toBlob(n,t.type,o.quality):n(e(a.toDataURL(t.type,o.quality)))})}).then(function(e){return u&&u.revokeObjectURL(s.src),e.name=t.name,i.result=e,o.success&&o.success(e),Promise.resolve(e)}).catch(function(e){if(!o.error)throw e;o.error(new Error(e))})}}]),t}()});